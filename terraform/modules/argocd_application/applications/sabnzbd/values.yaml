sabnzbd:
  initContainers:
    update-volume-permission:
      image: busybox
      command:
        [
          "sh",
          "-c",
          "chmod -R 777 /config  && mkdir -p /downloads/sabnzbd && chown 1001:1001 /downloads/sabnzbd",
        ]

      volumeMounts:
        - name: config
          mountPath: /config
        - name: downloads
          mountPath: /downloads
          readOnly: false
      securityContext:
        runAsUser: 0
  env:
    PGID: 1001
    PUID: 1001
    TZ: ${timezone}
    
  nodeSelector:
    priority: ${priority}
  
  # resources:
  #   requests:
  #     cpu: 15m
  #     memory: 105M
  #   limits:
  #     cpu: 44m
  #     memory: 1488M
  ingress:
    main:
      ingressClassName: traefik
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
        traefik.ingress.kubernetes.io/router.entrypoints: websecure-ext
        %{~ if mfa ~}
        traefik.ingress.kubernetes.io/router.middlewares: authelia-forwardauth-authelia@kubernetescrd
        %{~ endif ~}
        gethomepage.dev/enabled: "true"
        gethomepage.dev/name: "SABnzbd"
        gethomepage.dev/description: "Free and easy binary newsreader"
        gethomepage.dev/group: "Media"
        gethomepage.dev/icon: "sabnzbd-alt.png"
        gethomepage.dev/widget.type: "sabnzbd"
        gethomepage.dev/widget.url: "http://sabnzbd.${namespace}.svc.cluster.local:8080"
        gethomepage.dev/widget.key: "${api_key}"
      enabled: true
      hosts:
        - host: "sabnzbd.${domain}"
          paths:
          - path: /
      tls:
        - hosts:
            - "sabnzbd.${domain}"
          secretName: tls-sabnzbd-ingress
  # persistence:
  #   config:
  #     enabled: true
  #     existingClaim: sabnzbd-config
  #   downloads:
  #     enabled: true
  #     existingClaim: media
  #   downloads-radarr:
  #     enabled: true
  #     existingClaim: media-radarr
  #     mountPath: /downloads/radarr
  #     subpath: radarr


  # Generating persistence config from applications.yaml
  ${indent(2,yamlencode({persistence: { for key, value in storage: key => {"enabled":true,"existingClaim":value.name,"mountPath": try(value.mountPath,null),"subpath": try(value.subpath,null)}}}))}
jellyseerr:

  nodeSelector:
    priority: ${priority}
  resources:
    requests:
      cpu: 15m
      memory: 272M
    limits:
      cpu: 21m
      memory: 530M
  ingress:
    main:
      ingressClassName: traefik
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
        traefik.ingress.kubernetes.io/router.entrypoints: websecure-ext
        # traefik.ingress.kubernetes.io/router.middlewares: authelia-forwardauth-authelia@kubernetescrd
        gethomepage.dev/enabled: "true"
        gethomepage.dev/name: "Jellyseerr"
        gethomepage.dev/description: "Free and open source software application for managing requests for your media library"
        gethomepage.dev/group: "Media"
        gethomepage.dev/icon: "jellyseerr.png"
        gethomepage.dev/widget.type: "jellyseerr"
        gethomepage.dev/widget.url: "http://jellyseerr.${namespace}.svc.cluster.local:5055"
        gethomepage.dev/widget.key: "${api_key}"
      enabled: true
      hosts:
        - host: "jellyseerr.${domain}"
          paths:
          - path: /
      tls:
        - hosts:
            - "jellyseerr.${domain}"
          secretName: tls-jellyseerr-ingress

  # Generating persistence config from applications.yaml
  ${indent(2,yamlencode({persistence: { for key, value in storage: key => {"enabled":true,"existingClaim":value.name,"mountPath": try(value.mountPath == null ? "/app/config": value.mountPath,"/app/config")}}}))}
authelia:
  
  ## Authelia Domain
  ## Should be the root domain you want to protect.
  ## For example if you have apps app1.example.com and app2.example.com it should be example.com
  ## This affects the ingress (partially sets the domain used) and configMap.
  ## Authelia must be served from the domain or a subdomain under it.
  domain: ${duckdns_domain}.duckdns.org

  ingress:
    enabled: false

    annotations:
      cert-manager.io/cluster-issuer: letsencrypt
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      gethomepage.dev/enabled: "true"
      gethomepage.dev/name: "Authelia"
      gethomepage.dev/description: ""
      gethomepage.dev/group: "Internal"
      gethomepage.dev/icon: "authelia.png"

    labels: {}
    # labels:
    #   myLabel: myValue

    certManager: false
    rewriteTarget: true

    ## The Ingress Class Name.
    className: traefik

    ## Subdomain is the only thing required since we specify the domain as part of the root values of the chart.
    ## Example: To get Authelia to listen on https://auth.example.com specify 'auth' for ingress.subdomain,
    ## and specify example.com for the domain.
    subdomain: auth

    tls:
      enabled: true
      secret: authelia-tls

      # hostNameOverride:

    traefikCRD:
      enabled: true

      ## Use a standard Ingress object, not an IngressRoute.
      disableIngressRoute: true

      # matchOverride: Host(`auth.example.com`) && PathPrefix(`/`)

      # entryPoints: []
      entryPoints:
      - websecure

      # priority: 10

      # weight: 10

      sticky: false

      # stickyCookieNameOverride: authelia_traefik_lb

      # strategy: RoundRobin

      # responseForwardingFlushInterval: 100ms

      middlewares:
        auth:
          # nameOverride: authelia-auth
          authResponseHeaders:
          - Remote-User
          - Remote-Name
          - Remote-Email
          - Remote-Groups

        chains:
          auth:
            # nameOverride: authelia-auth-chain

            # List of Middlewares to apply before the forwardAuth Middleware in the authentication chain.
            # before: []
            before:
            - name: whitelist
              namespace: services
            - name: error-pages
              namespace: services

            # List of Middlewares to apply after the forwardAuth Middleware in the authentication chain.
            after: []
            # after:
            # - name: extra-middleware-name
            #   namespace: default

          ingressRoute:

            # List of Middlewares to apply before the middleware in the IngressRoute chain.
            before: []
            # before:
            # - name: extra-middleware-name
            #   namespace: default

            # List of Middlewares to apply after the middleware in the IngressRoute chain.
            after: []
            # after:
            # - name: extra-middleware-name
            #   namespace: default

      # Specific options for the TraefikCRD TLS configuration. The above TLS section is still used.
      tls:
        ## Disables inclusion of the IngressRoute TLSOptions.
        disableTLSOptions: false
        #   existingOptions:
        #     name: default-traefik-options
        #     namespace: default
        #   certResolver: default
        #   sans:
        #     - *.example.com
        #
        options:
          # nameOverride: authelia-tls-options
          nameOverride: ""

          minVersion: VersionTLS12
          maxVersion: VersionTLS13
          sniStrict: false
          cipherSuites:
            - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
            - TLS_RSA_WITH_AES_256_GCM_SHA384
          curvePreferences: []
          # curvePreferences:
          # - CurveP521
          # - CurveP384

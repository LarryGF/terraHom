sonarr:

  nodeSelector:
    priority: ${priority}
  
  resources:
    requests:
      cpu: 295m
      memory: 1310M
    limits:
      cpu: 1582m
      memory: 3576M
  ingress:
    main:
      ingressClassName: traefik
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
        traefik.ingress.kubernetes.io/router.entrypoints: websecure-ext
        traefik.ingress.kubernetes.io/router.middlewares: authelia-forwardauth-authelia@kubernetescrd
        gethomepage.dev/enabled: "true"
        gethomepage.dev/name: "Sonarr"
        gethomepage.dev/description: "Sonarr is an internet PVR for Usenet and Torrents."
        gethomepage.dev/group: "Aggregators"
        gethomepage.dev/icon: "sonarr.png"
        gethomepage.dev/widget.type: "sonarr"
        gethomepage.dev/widget.url: "http://sonarr.${namespace}.svc.cluster.local:8989"
        gethomepage.dev/widget.key: "${api_key}"
      enabled: true
      hosts:
        - host: "sonarr.${domain}"
          paths:
          - path: /
      tls:
        - hosts:
            - "sonarr.${domain}"
          secretName: tls-sonarr-ingress

  metrics:
    prometheusRule:
      enabled: true


  # Generating persistence config from applications.yaml
  ${indent(2,yamlencode({persistence: { for key, value in storage: key => {"enabled":true,"existingClaim":value.name,"mountPath": try(value.mountPath,null),"subpath": try(value.subpath,null)}}}))}
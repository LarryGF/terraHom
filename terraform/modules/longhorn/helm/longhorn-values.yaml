service:
  ui:
    type: ClusterIP
    nodePort: null
  manager:
    type: ClusterIP
    nodePort: ""
    loadBalancerIP: ""
    loadBalancerSourceRanges: ""

persistence:
  defaultClassReplicaCount: 1

longhornUI:
  replicas: 1

longhornConversionWebhook:
  replicas: 2

longhornAdmissionWebhook:
  replicas: 2

longhornRecoveryBackend:
  replicas: 1

ingress:
  enabled: true
  ingressClassName: traefik
  host: "longhorn.${domain}.duckdns.org"

  ## Set this to true in order to enable TLS on the ingress record
  tls: true

  ## Enable this in order to enable that the backend service will be connected at port 443
  secureBackends: false

  ## If TLS is set to true, you must declare what secret will store the key/certificate for TLS
  tlsSecret: tls-longhorn-ingress

  ## If ingress is enabled you can set the default ingress path
  ## then you can access the UI by using the following full path {{host}}+{{path}}
  path: /

  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
  #  kubernetes.io/ingress.class: nginx
  #  kubernetes.io/tls-acme: true

# Annotations to add to the Longhorn Manager DaemonSet Pods. Optional.
annotations: {}

serviceAccount:
  # Annotations to add to the service account
  annotations: {}

defaultSettings:
  defaultLonghornStaticStorageClass: longhorn
  createDefaultDiskLabeledNodes: true
  defaultReplicaCount: 1

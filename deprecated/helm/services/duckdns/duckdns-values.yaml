# The GroupName here is used to identify your company or business unit that
# created this webhook.
# For example, this may be "acme.mycompany.com".
# This name will need to be referenced in each Issuer's `webhook` stanza to
# inform cert-manager of where to send ChallengePayload resources in order to
# solve the DNS01 challenge.
# This group name should be **unique**, hence using your own company's domain
# here is recommended.

duckdns:
  token: ${token}
  # required, need to be comma separated if more than one domain to update
  domains: ${domains}

secret:
  existingSecret: false
  existingSecretName: ""

image:
  repository: ebrianne/duckdns-go
  tag: v1.0.2
  pullPolicy: IfNotPresent
  pullSecret: {}

nameOverride: ""
fullnameOverride: ""

replicaCount: 1
strategy:
  type: Recreate

customLabels: {}

extraEnvVars: 
  TZ: ${timezone}

podAnnotations: {}

# Configure the Security Context for the main container
securityContext:
  runAsNonRoot: true
  runAsUser: 65534

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []
  # A list of tolerations to be applied to the Deployment.
  # Example:
  #   tolerations:
  #   - key: "node-role.kubernetes.io/infra-worker"
  #     operator: "Exists"
  #     effect: "NoSchedule"

affinity: {}
  # An affinity stanza to be applied to the Deployment.
  # Example:
  #   affinity:
  #     nodeAffinity:
  #       requiredDuringSchedulingIgnoredDuringExecution:
  #         nodeSelectorTerms:
  #         - matchExpressions:
  #           - key: "node-role.kubernetes.io/infra-worker"
  #             operator: "Exists"

---
# Disable SWAP
- name: Disable Raspbian SWAP service
  systemd:
    name: dphys-swapfile
    state: stopped
    enabled: false
    masked: true

- name: Disable SWAP
  command: /sbin/swapoff -a
  when:
    - ansible_swaptotal_mb > 1

# Upgrade System
- name: Upgrade system
  apt:
    upgrade: dist
    update_cache: true

# Time
- name: Set timezone
  timezone:
    name: "{{ timezone }}"

- name: Ensure chrony is not installed
  package:
    name: chrony
    state: absent

- name: Install NTP
  package:
    name: ntp
    state: present
  notify: enable ntp

- name: Install Procps
  package:
    name: procps
    state: present

- name: Install networkmanager
  package:
    name: network-manager
    state: present
  notify: enable NetworkManager

- debug:
    var: inventory_hostname

# DNS
- name: Set hostname
  hostname:
    name: "{{ inventory_hostname }}"

- name: Update the /etc/hosts file with node name
  lineinfile:
    path: "/etc/hosts"
    regexp: "^127.0.1.1.*"
    line: "127.0.1.1\t{{ inventory_hostname }}"
    state: present
    backup: true

- name: Stop and disable systemd-resolved
  systemd:
    name: systemd-resolved
    state: stopped
    enabled: false
    masked: true

- name: Stop NetworkManager from modifying resolv.conf
  lineinfile:
    path: "/etc/NetworkManager/NetworkManager.conf"
    state: present
    line: "dns=none"
    regexp: "^dns=.*"
    insertafter: '^\[main\]'
  notify: restart networkmanager

- name: Configure Cloudflare DNS
  copy:
    src: "resolv.conf"
    dest: "/etc/resolv.conf"
    owner: root
    group: root
    mode: 0644

# AppArmor
- name: Install apparmor
  package:
    name: apparmor
    state: present

# Iptables
- name: Install iptables
  package:
    name: iptables
    state: present
    
# Longhorn
- name: Install open-iscsi
  package:
    name: open-iscsi
    state: present
  notify: enable iscsid

- name: Install required packages for Longhorn
  package:
    name:
      - curl
      - grep
      - mawk
      - util-linux
      - nfs-common
    state: present

- name: Set up logrotate for daemon.log and syslog
  copy:
    dest: "/etc/logrotate.d/large_logfiles"
    content: |
      /var/log/daemon.log
      /var/log/syslog
      {
        rotate 1
        weekly
        missingok
        notifempty
        compress
        delaycompress
        sharedscripts
        postrotate
          /bin/kill -HUP `cat /var/run/syslogd.pid 2> /dev/null` 2> /dev/null || true
        endscript
      }

# GPU
- name: Detect Graphics Card
  shell: lspci | grep -i 'VGA\|Display'
  register: gpu_check
  changed_when: false
  ignore_errors: true

- name: Set fact for GPU presence
  set_fact:
    gpu_present: "{{ 'VGA' in gpu_check.stdout or 'Display' in gpu_check.stdout }}"

- name: Enable non-free repositories in Debian
  lineinfile:
    path: /etc/apt/sources.list
    regexp: '^deb http://deb.debian.org/debian/ ([a-z]+) main'
    line: 'deb http://deb.debian.org/debian/ \1 main contrib non-free non-free-firmware'
    backrefs: yes
  notify: update apt cache

- name: Install Intel GPU drivers
  apt:
    name: intel-media-va-driver
    state: present
  when: gpu_present and 'Intel' in gpu_check.stdout

- name: Install AMD GPU drivers
  apt:
    name: 
      - xserver-xorg-video-amdgpu
      - firmware-amd-graphics
      - libgl1-mesa-dri
      - libglx-mesa0
      - mesa-vulkan-drivers
      - xserver-xorg-video-all
    state: present
  when: gpu_present and 'AMD' in gpu_check.stdout

# Oh-my-zsh
- name: Install Zsh
  package:
    name: 
      - zsh
      - git
    state: present

- name: Clone Oh-My-Zsh repository
  git:
    repo: https://github.com/ohmyzsh/ohmyzsh.git
    dest: "/home/{{ ansible_user }}/.oh-my-zsh"
    update: true

- name: Clone powerlevel10k
  git:
    repo: https://github.com/romkatv/powerlevel10k.git
    dest: "/home/{{ ansible_user }}/.oh-my-zsh/themes/powerlevel10k"
    update: true

- name: Clone zsh-syntax-highlighting
  git:
    repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
    dest: "/home/{{ ansible_user }}/.oh-my-zsh/plugins/zsh-syntax-highlighting"
    update: true

- name: Clone zsh-autosuggestions
  git:
    repo: https://github.com/zsh-users/zsh-autosuggestions.git
    dest: "/home/{{ ansible_user }}/.oh-my-zsh/plugins/zsh-autosuggestions"
    update: true

- name: Change user's shell to Zsh
  shell: usermod --shell /usr/bin/zsh {{ ansible_user }}

- name: Copy custom zshrc
  template:
    src: zshrc
    dest: "/home/{{ ansible_user }}/.zshrc"

- name: Copy custom powerlevel10k config
  copy:
    src: p10k
    dest: "/home/{{ ansible_user }}/.p10k.zsh"
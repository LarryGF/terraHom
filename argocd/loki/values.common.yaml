loki:
  loki:
    # Configures the readiness probe for all of the Loki pods
    readinessProbe:
      httpGet:
        path: /ready
        port: http-metrics
      initialDelaySeconds: 30
      timeoutSeconds: 1
    image:
      tag: null
    # -- Should enableServiceLinks be enabled. Default to enable
    enableServiceLinks: true
    # -- Config file contents for Loki
    # @default -- See values.yaml
    config: |
      {{- if .Values.enterprise.enabled}}
      {{- tpl .Values.enterprise.config . }}
      {{- else }}
      auth_enabled: {{ .Values.loki.auth_enabled }}
      {{- end }}

      {{- with .Values.loki.server }}
      server:
        {{- toYaml . | nindent 2}}
      {{- end}}

      memberlist:
        join_members:
          - {{ include "loki.memberlist" . }}
          {{- with .Values.migrate.fromDistributed }}
          {{- if .enabled }}
          - {{ .memberlistService }}
          {{- end }}
          {{- end }}

      {{- with .Values.loki.ingester }}
      ingester:
        {{- tpl (. | toYaml) $ | nindent 4 }}
      {{- end }}

      {{- if .Values.loki.commonConfig}}
      common:
      {{- toYaml .Values.loki.commonConfig | nindent 2}}
        storage:
        {{- include "loki.commonStorageConfig" . | nindent 4}}
      {{- end}}

      {{- with .Values.loki.limits_config }}
      limits_config:
        {{- tpl (. | toYaml) $ | nindent 4 }}
      {{- end }}

      runtime_config:
        file: /etc/loki/runtime-config/runtime-config.yaml

      {{- with .Values.loki.memcached.chunk_cache }}
      {{- if and .enabled (or .host .addresses) }}
      chunk_store_config:
        chunk_cache_config:
          memcached:
            batch_size: {{ .batch_size }}
            parallelism: {{ .parallelism }}
          memcached_client:
            {{- if .host }}
            host: {{ .host }}
            {{- end }}
            {{- if .addresses }}
            addresses: {{ .addresses }}
            {{- end }}
            service: {{ .service }}
      {{- end }}
      {{- end }}

      {{- if .Values.loki.schemaConfig}}
      schema_config:
      {{- toYaml .Values.loki.schemaConfig | nindent 2}}
      {{- else }}
      schema_config:
        configs:
          - from: 2022-01-11
            store: boltdb-shipper
            object_store: {{ .Values.loki.storage.type }}
            schema: v12
            index:
              prefix: loki_index_
              period: 24h
      {{- end }}

      {{ include "loki.rulerConfig" . }}

      table_manager:
        retention_deletes_enabled: false
        retention_period: 0

      {{- with .Values.loki.memcached.results_cache }}
      query_range:
        align_queries_with_step: true
        {{- if and .enabled (or .host .addresses) }}
        cache_results: {{ .enabled }}
        results_cache:
          cache:
            default_validity: {{ .default_validity }}
            memcached_client:
              {{- if .host }}
              host: {{ .host }}
              {{- end }}
              {{- if .addresses }}
              addresses: {{ .addresses }}
              {{- end }}
              service: {{ .service }}
              timeout: {{ .timeout }}
        {{- end }}
      {{- end }}

      {{- with .Values.loki.storage_config }}
      storage_config:
        {{- tpl (. | toYaml) $ | nindent 4 }}
      {{- end }}

      {{- with .Values.loki.query_scheduler }}
      query_scheduler:
        {{- tpl (. | toYaml) $ | nindent 4 }}
      {{- end }}

      {{- with .Values.loki.compactor }}
      compactor:
        {{- tpl (. | toYaml) $ | nindent 4 }}
      {{- end }}

      {{- with .Values.loki.analytics }}
      analytics:
        {{- tpl (. | toYaml) $ | nindent 4 }}
      {{- end }}

      {{- with .Values.loki.querier }}
      querier:
        {{- tpl (. | toYaml) $ | nindent 4 }}
      {{- end }}

      {{- with .Values.loki.index_gateway }}
      index_gateway:
        {{- tpl (. | toYaml) $ | nindent 4 }}
      {{- end }}
    # Should authentication be enabled
    auth_enabled: false
    # -- Tenants list to be created on nginx htpasswd file, with name and password keys
    tenants: []
    # -- Check https://grafana.com/docs/loki/latest/configuration/#server for more info on the server configuration.
    server:
      http_listen_port: 3100
      grpc_listen_port: 9095
    storage:
      filesystem:
        chunks_directory: /var/loki/chunks
        rules_directory: /var/loki/rules
    # -- Configure memcached as an external cache for chunk and results cache. Disabled by default
    # must enable and specify a host for each cache you would like to use.
    memcached:
      chunk_cache:
        enabled: false
        host: ""
        service: "memcached-client"
        batch_size: 256
        parallelism: 10
      results_cache:
        enabled: false
        host: ""
        service: "memcached-client"
        timeout: "500ms"
        default_validity: "12h"
    # -- Check https://grafana.com/docs/loki/latest/configuration/#schema_config for more info on how to configure schemas
    schemaConfig: {}
    # -- Check https://grafana.com/docs/loki/latest/configuration/#ruler for more info on configuring ruler
    rulerConfig: {}
    # -- Structured loki configuration, takes precedence over `loki.config`, `loki.schemaConfig`, `loki.storageConfig`
    structuredConfig: {}
    # -- Additional query scheduler config
    query_scheduler: {}
    # -- Additional storage config
    storage_config:

  # -- Section for configuring optional Helm test
  test:
    enabled: false

  # Monitoring section determines which monitoring features to enable
  monitoring:
    # Dashboards for monitoring Loki
    dashboards:
      # -- If enabled, create configmap with dashboards for monitoring Loki
      enabled: true
      # -- Alternative namespace to create dashboards ConfigMap in
      namespace: null
      # -- Labels for the dashboards ConfigMap
      labels:
        grafana_dashboard: "1"
    # Recording rules for monitoring Loki, required for some dashboards
    rules:
      # -- If enabled, create PrometheusRule resource with Loki recording rules
      enabled: true
      # -- Include alerting rules
      alerting: true
      # -- Alternative namespace to create PrometheusRule resources in
      namespace: null
      # -- Additional annotations for the rules PrometheusRule resource
      annotations: {}
      # -- Additional labels for the rules PrometheusRule resource
      labels: {}
      # -- Additional groups to add to the rules file
      additionalGroups: []
      # - name: additional-loki-rules
      #   rules:
      #     - record: job:loki_request_duration_seconds_bucket:sum_rate
      #       expr: sum(rate(loki_request_duration_seconds_bucket[1m])) by (le, job)
      #     - record: job_route:loki_request_duration_seconds_bucket:sum_rate
      #       expr: sum(rate(loki_request_duration_seconds_bucket[1m])) by (le, job, route)
      #     - record: node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate
      #       expr: sum(rate(container_cpu_usage_seconds_total[1m])) by (node, namespace, pod, container)
    # ServiceMonitor configuration
    serviceMonitor:
      # -- If enabled, ServiceMonitor resources for Prometheus Operator are created
      enabled: true
      # -- Namespace selector for ServiceMonitor resources
      namespaceSelector: {}
      # -- ServiceMonitor annotations
      annotations: {}
      # -- Additional ServiceMonitor labels
      labels: {}
      # -- ServiceMonitor scrape interval
      # Default is 15s because included recording rules use a 1m rate, and scrape interval needs to be at
      # least 1/4 rate interval.
      interval: 15s
      # -- ServiceMonitor scrape timeout in Go duration format (e.g. 15s)
      scrapeTimeout: null
      # -- ServiceMonitor relabel configs to apply to samples before scraping
      # https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#relabelconfig
      relabelings: []
      # -- ServiceMonitor will use http by default, but you can pick https as well
      scheme: http
      # -- ServiceMonitor will use these tlsConfig settings to make the health check requests
      tlsConfig: null
      # -- If defined, will create a MetricsInstance for the Grafana Agent Operator.
      metricsInstance:
        # -- If enabled, MetricsInstance resources for Grafana Agent Operator are created
        enabled: true
        # -- MetricsInstance annotations
        annotations: {}
        # -- Additional MetricsInstance labels
        labels: {}
        # -- If defined a MetricsInstance will be created to remote write metrics.
        remoteWrite: null
    # Self monitoring determines whether Loki should scrape its own logs.
    # This feature currently relies on the Grafana Agent Operator being installed,
    # which is installed by default using the grafana-agent-operator sub-chart.
    # It will create custom resources for GrafanaAgent, LogsInstance, and PodLogs to configure
    # scrape configs to scrape its own logs with the labels expected by the included dashboards.
    selfMonitoring:
      enabled: false
    # The Loki canary pushes logs to and queries from this loki installation to test
    # that it's working correctly
    lokiCanary:
      enabled: false
  # Configuration for the write pod(s)
  write:
    # -- Number of replicas for the write
    replicas: 2
    persistence:
      enableStatefulSetAutoDeletePVC: false

  # Configuration for the table-manager
  tableManager:
    # -- Specifies whether the table-manager should be enabled
    enabled: false
    image:
      # -- The Docker registry for the table-manager image. Overrides `loki.image.registry`
      registry: null
      # -- Docker image repository for the table-manager image. Overrides `loki.image.repository`
      repository: null
      # -- Docker image tag for the table-manager image. Overrides `loki.image.tag`
      tag: null
    # -- Command to execute instead of defined in Docker image
    command: null
    # -- The name of the PriorityClass for table-manager pods
    priorityClassName: null
    # -- Labels for table-manager pods
    podLabels: {}
    # -- Annotations for table-manager pods
    podAnnotations: {}
    # -- Labels for table-manager service
    serviceLabels: {}
    # -- Additional CLI args for the table-manager
    extraArgs: []
    # -- Environment variables to add to the table-manager pods
    extraEnv: []
    # -- Environment variables from secrets or configmaps to add to the table-manager pods
    extraEnvFrom: []
    # -- Volume mounts to add to the table-manager pods
    extraVolumeMounts: []
    # -- Volumes to add to the table-manager pods
    extraVolumes: []
    # -- Resource requests and limits for the table-manager
    resources: {}
    # -- Containers to add to the table-manager pods
    extraContainers: []
    # -- Grace period to allow the table-manager to shutdown before it is killed
    terminationGracePeriodSeconds: 30
    # -- Affinity for table-manager pods. Passed through `tpl` and, thus, to be configured as string
    # @default -- Hard node and soft zone anti-affinity
    affinity: |
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                {{- include "loki.tableManagerSelectorLabels" . | nindent 10 }}
            topologyKey: kubernetes.io/hostname
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  {{- include "loki.tableManagerSelectorLabels" . | nindent 12 }}
              topologyKey: failure-domain.beta.kubernetes.io/zone
    # -- Node selector for table-manager pods
    nodeSelector: {}
    # -- Tolerations for table-manager pods
    tolerations: []

  # Configuration for the read pod(s)
  read:
    # -- Number of replicas for the read
    replicas: 2
    persistence:
      enableStatefulSetAutoDeletePVC: false

  # Configuration for the backend pod(s)
  backend:
    # -- Number of replicas for the backend
    replicas: 1
    persistence:
      enableStatefulSetAutoDeletePVC: false

  # Use either this ingress or the gateway, but not both at once.
  # If you enable this, make sure to disable the gateway.
  # You'll need to supply authn configuration for your ingress controller.

  # Configuration for the memberlist service
  memberlist:
    service:
      publishNotReadyAddresses: false

  tracing:
    jaegerAgentHost: ""

  # Create extra manifests via values. Would be passed through `tpl` for templating
  extraObjects: []
  # - apiVersion: v1
  #   kind: ConfigMap
  #   metadata:
  #     name: loki-alerting-rules
  #   data:
  #     loki-alerting-rules.yaml: |-
  #       groups:
  #         - name: example
  #           rules:
  #           - alert: example
  #             expr: |
  #               sum(count_over_time({app="loki"} |~ "error")) > 0
  #             for: 3m
  #             labels:
  #               severity: warning
  #               category: logs
  #             annotations:
  #               message: "loki has encountered errors"

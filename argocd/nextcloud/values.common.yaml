nextcloud:
  image:
    flavor: fpm
    tag: 27.1.3-fpm
    pullPolicy: IfNotPresent

  nameOverride: ""
  fullnameOverride: "nextcloud"

  # Number of replicas to be deployed
  replicaCount: 1

  ## Allowing use of ingress controllers
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
  ##

  internalDatabase:
    enabled: true
    database: nextcloud
  ##
  ## External database configuration
  ##
  externalDatabase:
    enabled: false
    type: mysql
    host: nextcloud-mariadb
    user: nextcloud
    password: nextcloud
    database: nextcloud

    # ## Use a existing secret
    # existingSecret:
    #   enabled: false
    #   # secretName: nameofsecret
    #   # usernameKey: db-username
    #   # passwordKey: db-password
    #   # hostKey: db-hostname-or-ip
    #   # databaseKey: db-name



  ##
  ## Redis chart configuration
  ## for more options see https://github.com/bitnami/charts/tree/main/bitnami/redis
  ##

  redis:
    enabled: true
    auth:
      enabled: true
      password: 'nextcloud'
    replica:
      replicaCount: 0

  ## Cronjob to execute Nextcloud background tasks
  ## ref: https://docs.nextcloud.com/server/latest/admin_manual/configuration_server/background_jobs_configuration.html#cron
  ##
  cronjob:
    enabled: true

    ## Cronjob sidecar resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ##
    resources: {}

    # Allow configuration of lifecycle hooks
    # ref: https://kubernetes.io/docs/tasks/configure-pod-container/attach-handler-lifecycle-event/
    lifecycle: {}
      # postStartCommand: []
      # preStopCommand: []
    # Set securityContext parameters. For example, you may need to define runAsNonRoot directive
    securityContext: {}
    #   runAsUser: 33
    #   runAsGroup: 33
    #   runAsNonRoot: true
    #   readOnlyRootFilesystem: true


  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi

  ## Liveness and readiness probe values
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 60
    periodSeconds: 20
    timeoutSeconds: 5
    failureThreshold: 10
    successThreshold: 1
  readinessProbe:
    enabled: true
    initialDelaySeconds: 60
    periodSeconds: 20
    timeoutSeconds: 5
    failureThreshold: 10
    successThreshold: 1
  startupProbe:
    enabled: false
    initialDelaySeconds: 70
    periodSeconds: 20
    timeoutSeconds: 5
    failureThreshold: 30
    successThreshold: 1

  ## Prometheus Exporter / Metrics
  ##
  metrics:
    enabled: false

    replicaCount: 1
    # The metrics exporter needs to know how you serve Nextcloud either http or https
    https: true
    # Use API token if set, otherwise fall back to password authentication
    # https://github.com/xperimental/nextcloud-exporter#token-authentication
    # Currently you still need to set the token manually in your nextcloud install
    token: ""
    timeout: 5s
    # if set to true, exporter skips certificate verification of Nextcloud server.
    tlsSkipVerify: false

    image:
      repository: xperimental/nextcloud-exporter
      tag: 0.6.1
      pullPolicy: IfNotPresent
      # pullSecrets:
      #   - myRegistrKeySecretName

    ## Metrics exporter resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ##
    # resources: {}

    ## Metrics exporter pod Annotation and Labels
    # podAnnotations: {}

    # podLabels: {}

    service:
      type: ClusterIP
      ## Use serviceLoadBalancerIP to request a specific static IP,
      ## otherwise leave blank
      # loadBalancerIP:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9205"
      labels: {}

    ## Prometheus Operator ServiceMonitor configuration
    ##
    serviceMonitor:
      ## @param metrics.serviceMonitor.enabled Create ServiceMonitor Resource for scraping metrics using PrometheusOperator
      ##
      enabled: true

      ## @param metrics.serviceMonitor.namespace Namespace in which Prometheus is running
      ##
      namespace: ""

      ## @param metrics.serviceMonitor.jobLabel The name of the label on the target service to use as the job name in prometheus.
      ##
      jobLabel: ""

      ## @param metrics.serviceMonitor.interval Interval at which metrics should be scraped
      ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
      ##
      interval: 30s

      ## @param metrics.serviceMonitor.scrapeTimeout Specify the timeout after which the scrape is ended
      ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
      ##
      scrapeTimeout: ""

      ## @param metrics.serviceMonitor.labels Extra labels for the ServiceMonitor
      ##
      labels: {}


  rbac:
    enabled: true
    serviceaccount:
      create: true
      name: nextcloud-serviceaccount
      annotations: {}


  ## @param securityContext for nextcloud pod @deprecated Use `nextcloud.podSecurityContext` instead
  securityContext: {}
